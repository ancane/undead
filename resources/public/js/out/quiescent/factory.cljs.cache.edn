{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name quiescent.factory, :imports nil, :requires {cljsjs.react cljsjs.react}, :uses nil, :defs {factory {:protocol-inline nil, :meta {:file "/home/wise/projects/undead/resources/public/js/out/quiescent/factory.cljs", :line 5, :column 7, :end-line 5, :end-column 14, :arglists (quote ([type])), :doc "Return a Component factory function. The argument may be any\n   value accepted by React.createElement (that is, the string name of a\n   HTML tag, or an instance of ReactClass).\n\n   Returns a function that takes props and children (the same as the\n   built-in ReactJS element constructors)."}, :name quiescent.factory/factory, :variadic false, :file "resources/public/js/out/quiescent/factory.cljs", :end-column 14, :method-params ([type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([type])), :doc "Return a Component factory function. The argument may be any\n   value accepted by React.createElement (that is, the string name of a\n   HTML tag, or an instance of ReactClass).\n\n   Returns a function that takes props and children (the same as the\n   built-in ReactJS element constructors)."}}, :require-macros {f quiescent.factory, quiescent.factory quiescent.factory}, :doc nil}